//=ie
//*display: inline
//*zoom: 1

//absolute.
.absolute {
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;

}

//clearfix
.clearfix {
    &:before,
    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}

//pseudo
.pseudo(@top: 0, @left: 0, @width: initial, @height: initial, @display: initial) {
    content: ' ';
    position: absolute;
    top: @top;
    left: @left;
    width: @width;
    height: @height;
    display: @display;
}

//links
.links(@link, @visit, @hover, @active) {
    a {
        color: @link;
        &:visited {
            color: @visit;
        }
        &:hover {
            color: @hover;

        }
        &:active {
            color: @active;

        }
    }

}

//vertical-middle

.vertical-middle {
    white-space: nowrap;
    text-align: center;
    font-size: 0;
    &:before {
        content: "";
        height: 100%;
        display: inline-block;
        vertical-align: middle;
    }

}

.vertical-middle-inner(@fz) {

    display: inline-block;
    vertical-align: middle;
    white-space: normal;
    font-size: @fz;
}

//center-translate

.center-translate {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%)

}

//center-margin
.center-margin(@blockW, @blockH) {
    position: absolute;
    top: 50%;
    left: 50%;
    margin-left: -(@blockW/2);
    margin-top: -(@blockH/2);

}

//table-cell

.table-cell {

    width: 100%;
    text-align: center;
}

.table-cell-inner {

    display: table-cell;
    vertical-align: top;
}

//inlineblock-justify-list

.inline-block-justify {
    text-align: justify;
    line-height: 0;
    font-size: 0;
    text-justify: newspaper;
    zoom: 1;
    text-align-last: justify;
    &:after {
        width: 100%;
        height: 0;
        visibility: hidden;
        overflow: hidden;
        content: '';
        display: inline-block;
    }
}

.inline-block-justify-inner(@fz, @lh) {
    display: inline-block;
    font-size: @fz;
    line-height: @lh;

}

.inlineblock {
    display: inline-block;
    vertical-align: top;
}

.bg-jpg(@name) {

    background: url("@{url-img}@{name}.jpg") no-repeat center;
}

.bg-png(@name) {

    background: url("@{url-img}@{name}.png") no-repeat center;
}

//fluid block
.fluid-block(@fixedW, @fixedH) {
    position: relative;
    &:before {
        content: '';
        display: block;
        padding-top: ((@fixedH*100/@fixedW)*1%);
        height: 0;

    }
}

//fluid block
.fluid-bg(@fixedW, @fixedH) {
    position: relative;
    background-size: contain;
    &:before {
        content: '';
        display: block;
        padding-top: ((@fixedH*100/@fixedW)*1%);
        height: 0;

    }
}

//fluid-img

.fluid-img(@fixedH) {
    position: relative;
    &:before {
        content: '';
        display: block;
        padding-top: @fixedH;
        height: 0;

    }
}

.fluid-img-wrap(@width, @imgheight) {
    width: @width;
    height: 100%;
    bottom: 0;
    .center-margin(@width, @imgheight);

}

//property table
.property-table(@bgcolor) {
    background-color: @bgcolor;

}

.property-row {
    position: relative;
    overflow: hidden;

}

.property-line(@bottom) {
    .pseudo(auto, 0, 100%, 1px, block);
    z-index: 0;
    bottom: @bottom;
}

.property-name(@bgcolor) {
    position: relative;
    z-index: 1;
    left: 0;
    background-color: @bgcolor;

}

.property-val(@bgcolor) {
    position: absolute;
    z-index: 2;
    right: 0;
    background-color: @bgcolor;

}

//no-number-list
.no-number-list-item(@padding) {
    position: relative;
    padding-left: @padding;

}

.no-number-list-dot(@bgcolor) {
    background-color: @bgcolor;
    .border-radius(50%);
}

//number-list
.number-list(@item) {
    counter-reset: @item;

}

.number-list-item(@padding) {

    position: relative;
    padding-left: @padding;

}

.number-list-num(@item, @symbol) {
    content: counter(@item) @symbol;
    counter-increment: @item;
    position: absolute;
    left: 0;
    top: 0;
}

//sprite
.sprite(@width, @height, @row, @col) {
    width: 27px;
    height: 27px;
    display: inline-block;
    background-position: (@width - (@width*@col)) (@height - (@height*@row));
}

//triangle
.triangle(@width, @height, @bgcolor, @direction) {
    width: 0;
    height: 0;
    border-style: solid;
    position: absolute;
    content: '';

    & when (@direction = t) {
    border-width:0 @width*1px/2 @height*1px @width*1px/2;
    border-color: transparent transparent @bgcolor transparent;

}& when(@direction =  r) {
    border-width: @height*1px/2 0 @height*1px/2 @width*1px;
    border-color: transparent transparent transparent @bgcolor;
} & when(@direction = b) {
    border-width: @height*1px @width*1px/2 0 @width*1px/2;
    border-color: @bgcolor transparent transparent transparent;
} & when(@direction = l) {
    border-width: @height*1px/2 @width*1px @height*1px/2 0;
    border-color: transparent @bgcolor transparent transparent;
}& when(@direction = tl) {
    border-width: @height*1px @width*1px 0 0;
    border-color: @bgcolor transparent transparent transparent;
}& when(@direction = tr) {
    border-width: 0 @width*1px @height*1px 0;
    border-color: transparent @bgcolor transparent transparent;
} & when(@direction = br) {
    border-width: 0 0 @height*1px @width*1px;
    border-color: transparent transparent @bgcolor transparent;
} & when(@direction = bl) {
    border-width: @height*1px 0 0 @width*1px;
    border-color: transparent transparent transparent @bgcolor;

}

}

//close icon
.close-icon(@width, @height, @border, @bg) {
    position: absolute;
    &:before {
        top: 0;
        left: -1px;
        .triangle(@width, @height, @border, l);

    }

    &:after {
        top: 0;
        left: 0;
        .triangle(@width, @height, @bg, l);

    }
    span {
        position: absolute;

        &:before {
            .triangle(@width, @height, @border, r);
            top: 0;
            right: -1px;

        }

        &:after {
            .triangle(@width, @height, @bg, r);
            top: 0;
            right: 0;
        }

    }
}
